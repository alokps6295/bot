{"version":3,"sources":["../../src/app/services/redditService.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/tabs/tabs.ts","../../src/pages/reddits/reddit.ts","../../src/pages/details/details.ts","../../src/pages/settings/setting.ts","../../src/pages/home/home.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import{Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport 'rxjs/Rx';\n\n@Injectable()\nexport class RedditService{\n http:any;\n baseUrl:String;\n\n constructor(http:Http){\n    this.http=http;\n    this.baseUrl='https://www.reddit.com/r';\n\n}\n\ngetPosts(category,limit){\n    return this.http.get(this.baseUrl+'/'+category+'/top.json?limit='+limit)\n    .map(res=>res.json());\n}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/redditService.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 160;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 160\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 205;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 205\n// module chunks = 0","import { Component } from '@angular/core';\n\nimport { RedditPage } from '../reddits/reddit';\nimport { settingPage } from '../settings/setting';\nimport { HomePage } from '../home/home';\n\n@Component({\n  templateUrl: 'tabs.html'\n})\nexport class TabsPage {\n\n  tab1Root = HomePage;\n  tab2Root = RedditPage;\n  tab3Root = settingPage;\n\n  constructor() {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport {RedditService} from '../../app/services/redditService';\nimport { DetailPage } from '../details/details';\n\n@Component({\n  selector: 'reddit-page',\n  templateUrl: 'reddit.html'\n})\nexport class RedditPage {\n  items:any;\n\n  constructor(public navCtrl: NavController,private redditService:RedditService) {\n\n  }\n  ngOnInit(){\n      this.getPosts('sports',5);\n  }\n  getPosts(category,limit){\n      this.redditService.getPosts(category,limit).subscribe(response=>\n    this.items=response.data.children);\n  }\n\n  viewItem(data){\n    this.navCtrl.push(DetailPage,{\n      item:data\n    });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reddits/reddit.ts","import { Component } from '@angular/core';\nimport { NavController,NavParams } from 'ionic-angular';\n\n@Component({\n  selector: 'page-detail',\n  templateUrl: 'details.html'\n})\nexport class DetailPage {\nitem:any;\n  constructor(public navCtrl: NavController,public params:NavParams) {\n        this.item=params.get('item');\n        console.log(this.item.title);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/details/details.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'setting-page',\n  templateUrl: 'setting.html'\n})\nexport class settingPage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/setting.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule, ErrorHandler } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\n\nimport { RedditPage } from '../pages/reddits/reddit';\nimport { settingPage } from '../pages/settings/setting';\nimport { HomePage } from '../pages/home/home';\nimport { TabsPage } from '../pages/tabs/tabs';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { RedditService } from './services/redditService';\nimport { HttpModule } from '@angular/http';\nimport {DetailPage} from '../pages/details/details';\n\n\n@NgModule({\n  declarations: [\n    MyApp,\n    RedditPage,\n    settingPage,\n    DetailPage,\n    HomePage,\n    TabsPage\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    RedditPage,\n    DetailPage,\n    settingPage,\n    HomePage,\n    TabsPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    RedditService,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport {RedditService} from './services/redditService';\nimport { TabsPage } from '../pages/tabs/tabs';\n\n@Component({\n  templateUrl: 'app.html',\n  providers:[RedditService]\n})\nexport class MyApp {\n  rootPage:any = TabsPage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}